import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import useSWR from "swr";
import Select from "react-select";

// const FetchAndRenderMovies = async ({ genre, rating }: any) => {
//   const response = await fetch(
//     `http://localhost:3001/api/movie?genre=${genre}&${rating}`
//   );
//   const data = await response.json();

//   console.log("movies");
//   return <>{JSON.stringify(data)}</>;
// };

const Home: NextPage = () => {
  const genres = [
    "Action",
    "Adventure",
    "Animated",
    "Biography",
    "Comedy",
    "Crime",
    "Dance",
    "Disaster",
    "Documentary",
    "Drama",
    "Erotic",
    "Family",
    "Fantasy",
    "Found Footage",
    "Historical",
    "Horror",
    "Independent",
    "Legal",
    "Live Action",
    "Martial Arts",
    "Musical",
    "Mystery",
    "Noir",
    "Performance",
    "Political",
    "Romance",
    "Satire",
    "Science Fiction",
    "Short",
    "Silent",
    "Slasher",
    "Sports",
    "Spy",
    "Superhero",
    "Supernatural",
    "Suspense",
    "Teen",
    "Thriller",
    "War",
    "Western",
  ];

  const arrayToJSON = (array: string[]): any => {
    return array.map((arr: any) => {
      return {
        label: arr,
        value: arr.toLowerCase(),
      };
    });
  };
  const [genre, setGenre] = useState({label: "Action", value: "action"});
  const [rating, setRating] = useState("");

  const [loading, setIsLoading] = useState(false);

  const [movieData, setmoviedata] = useState<any>(null);

  const handleClick = async () => {
    setmoviedata(null);
    setIsLoading(true);

    const response = await fetch(
      `http://localhost:3001/api/movie?genre=${ genre.value }&rating=${rating}`
    );
    const data = await response.json();
    setmoviedata(data);
    setIsLoading(false);
  };
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className="text-gray-600 body-font border-b-2 shadow-sm">
        <div className="container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center">
          <a className="flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0">
            <span className="ml-3 text-xl">Movie Recommender</span>
          </a>
          <nav className="md:ml-auto flex flex-wrap items-center text-base justify-center">
          </nav>
        </div>
      </header>
      <div className="lg:w-1/3 md:w-1/2 bg-white rounded-lg p-8 flex flex-col md:ml-auto w-full md:mt-0 relative z-10 shadow-md mr-auto mt-4">
        <div className="relative mb-4">
         
          <Select
            options={arrayToJSON(genres)}
            value={genre}
            placeholder="Select a genre"
            onChange={(newValue: any) => {
              setGenre(newValue);
            }}
          />
        </div>
        <div className="relative mb-4">
          <input
            value={rating}
            type="number"
            placeholder="IMDB Rating"
            onChange={(e) => setRating(e.target.value)}
            className="w-full bg-white rounded border border-gray-300 focus:border-green-500 focus:ring-2 focus:ring-green-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"
          />
        </div>

        <button
          className="text-white bg-green-500 border-0 py-2 px-6 focus:outline-none hover:bg-green-600 rounded text-lg"
          onClick={handleClick}
        >
          {" "}
          Submit{" "}
        </button>

        {/* {
      shouldRender && <FetchAndRenderMovies genre={genre} rating={rating}/>
    } */}
      </div>

      <section className="text-gray-600 body-font overflow-hidden">
        <div className="container px-5 py-24 mx-auto">
          <div className="-my-8 divide-y-2 divide-gray-100">
            {loading && <p className="text-center"> Loading ... </p>}
            {movieData?.movies.map((movie: any, index: number) => {
              return (
                <div className="py-8 flex flex-wrap md:flex-nowrap" key={index}>
                  <div className="md:flex-grow">
                    <p className="leading-relaxed">{movie}</p>
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      </section>
    </div>
  );
};

export default Home;
